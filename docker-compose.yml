version: "3.8"

services:
  # Orion is an NGSI-v2 context broker
  orion-v2:
    labels:
      org.fiware: 'iot'
    image: quay.io/fiware/orion:${ORION_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${ORION_PORT}"
    ports:
      - "${ORION_PORT}:${ORION_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT}/version || exit 1
      interval: 5s

  # IoT-Agent is configured for the UltraLight Protocol
  iot-agent:
    labels:
      org.fiware: 'iot'
    image: quay.io/fiware/iotagent-ul:${ULTRALIGHT_VERSION}
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT}"
      - "${IOTA_SOUTH_PORT}"
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
      - "${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}" # localhost:7896
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentul # The name of the database used in mongoDB
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT} # The port used for device traffic over HTTP
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT}
      - IOTA_DEFAULT_RESOURCE=/iot/d
    healthcheck:
      interval: 5s



  iot:
    labels:
      org.fiware: 'iot'
    image: quay.io/fiware/tutorials.context-provider
    hostname: iot-sensors
    container_name: fiware-iot
    depends_on:
      - orion-v2
      - iot-agent
    networks:
      default:
        aliases:
          - iot
          - context-provider
    expose:
      - "${APP_PORT}"
      - "${DUMMY_DEVICE_PORT}"
    ports:
      - "${APP_PORT}:${APP_PORT}" # localhost:3000
      - "${DUMMY_DEVICE_PORT}:${DUMMY_DEVICE_PORT}" # localhost:3001
    environment:
      - "MONGO_URL=mongodb://mongo-db:27017"
      - "DEBUG=iot:*"
      - "WEB_APP_PORT=${APP_PORT}" # Port used by the content provider proxy and web-app for viewing data
      - "IOTA_HTTP_HOST=iot-agent"
      - "IOTA_HTTP_PORT=${IOTA_SOUTH_PORT}"
      - "DUMMY_DEVICES_PORT=${DUMMY_DEVICE_PORT}" # Port used by the dummy IOT devices to receive commands
      - "DUMMY_DEVICES_TRANSPORT=HTTP" # Default transport used by dummy Io devices
      - "DUMMY_DEVICES_API_KEY=4jggokgpepnvsb2uv4s40d59ov"
      - "CONTEXT_BROKER=http://orion:${ORION_PORT}/v2" # URL of the context broker to update context
      - "OPENWEATHERMAP_KEY_ID=<ADD_YOUR_KEY_ID>"
      - "TWITTER_CONSUMER_KEY=<ADD_YOUR_CONSUMER_KEY>"
      - "TWITTER_CONSUMER_SECRET=<ADD_YOUR_CONSUMER_SECRET>"

  # WireCloud
  wirecloud:
    image: fiware/wirecloud:latest
    container_name: fiware-wirecloud
    depends_on:
      - orion-v2
      - mongo-db
    ports:
      - "8000:8000"
    environment:
      - WIRECLOUD_HTTP_PORT=8000
      - WIRECLOUD_HTTP_HOST=wirecloud
      - WIRECLOUD_MONGO_HOST=mongo-db
      - WIRECLOUD_MONGO_PORT=${MONGO_DB_PORT}
      - WIRECLOUD_MONGO_DB=wirecloud
      - WIRECLOUD_ADMIN_USER=admin
      - WIRECLOUD_ADMIN_EMAIL=admin@example.com
      - WIRECLOUD_ADMIN_PASS=admin
      - WIRECLOUD_URL_PATH_PREFIX=/
    networks:
      - default

  # Database
  mongo-db:
    labels:
      org.fiware: 'iot'
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Persistent Data
  fiware-sth-comet:
     image: telefonicaiot/fiware-sth-comet
     restart: always
     hostname: sth-comet
     container_name: fiware-sth-comet
     depends_on:
       - mongo-db
     ports:
       - "8666:8666"
     environment:
       - STH_HOST=0.0.0.0
       - STH_PORT=8666
       - DB_PREFIX=sth_
       - DB_URI=mongo-db:27017
       - LOGOPS_LEVEL=DEBUG    

networks:
  default:
    labels:
      org.fiware: 'iot'
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db: ~
